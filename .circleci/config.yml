version: 2.1
jobs:
  build:
    parameters:
      xcode-version:
        type: string
      ios-sim:
        type: string
      ssh-fix:
        type: boolean
        default: false
      build-doc:
        type: boolean
        default: false
      run-lint:
        type: boolean
        default: false

    shell: /bin/bash --login -eo pipefail

    macos:
      xcode: <<parameters.xcode-version>>
    resource_class: macos.x86.medium.gen2

    steps:
    - checkout

    # There's an XCode bug present in the 12.0.1 CircleCI image that prevents fetching SSH
    # dependencies from working in some cases, so we disable CircleCI's rewriting of the HTTPS
    # GitHub URLs to SSH.
    - when:
        condition: <<parameters.ssh-fix>>
        steps:
          - run:
              name: SSH fix
              command: git config --global --unset url.ssh://git@github.com.insteadof

    - run:
        name: Setup for builds
        command: |
          mkdir -p 'test-results'
          mkdir -p 'artifacts'

    - run:
        name: Build for macOS
        command: xcodebuild build -scheme 'LaunchDarkly_macOS' -sdk macosx -destination 'platform=macOS' | tee 'artifacts/raw-logs-macosx.txt' | xcpretty -r junit -o 'test-results/platform-macosx/junit.xml'
        when: always

    - run:
        name: Build Tests for iOS device
        command: xcodebuild build-for-testing -scheme 'LaunchDarkly_iOS' -sdk iphoneos CODE_SIGN_IDENTITY= | tee 'artifacts/raw-logs-iphoneos.txt' | xcpretty
        when: always

    - run:
        name: Build & Test on iOS Simulator
        command: xcodebuild test -scheme 'LaunchDarkly_iOS' -sdk iphonesimulator -destination '<<parameters.ios-sim>>' CODE_SIGN_IDENTITY= | tee 'artifacts/raw-logs-iphonesimulator.txt' | xcpretty -r junit -o 'test-results/platform-iphonesimulator/junit.xml'
        when: always

    - run:
        name: Build for tvOS device
        command: xcodebuild build -scheme 'LaunchDarkly_tvOS' -sdk appletvos CODE_SIGN_IDENTITY= | tee 'artifacts/raw-logs-appletvos.txt' | xcpretty
        when: always

    - run:
        name: Build for tvOS Simulator
        command: xcodebuild build -scheme 'LaunchDarkly_tvOS' -sdk appletvsimulator -destination 'platform=tvOS Simulator,name=Apple TV' | tee 'artifacts/raw-logs-appletvsimulator.txt' | xcpretty -r junit -o 'test-results/platform-appletvsimulator/junit.xml'
        when: always

    - run:
        name: Build for watchOS simulator
        command: xcodebuild build -scheme 'LaunchDarkly_watchOS' -sdk watchsimulator | tee 'artifacts/raw-logs-watchsimulator.txt' | xcpretty
        when: always

    - run:
        name: Build for watchOS device
        command: xcodebuild build -scheme 'LaunchDarkly_watchOS' -sdk watchos | tee 'artifacts/raw-logs-watchos.txt' | xcpretty
        when: always

    - run:
        name: Build & Test with swiftpm
        command: swift test -v 2>&1 | tee 'artifacts/raw-logs-swiftpm.txt' | xcpretty -r junit -o 'test-results/swiftpm/junit.xml'
        when: always

    - when:
        condition: <<parameters.build-doc>>
        steps:
          - restore_cache:
              key: v1-gem-cache-<<parameters.xcode-version>>-

          - run:
              name: Install jazzy gem
              command: |
                gem install jazzy
                gem cleanup
                # Used as cache key to prevent storing redundant caches
                gem list > /tmp/cache-key.txt

          - save_cache:
              key: v1-gem-cache-<<parameters.xcode-version>>-{{ checksum "/tmp/cache-key.txt" }}
              paths:
                - ~/.gem

          - run:
              name: Build Documentation
              command: jazzy -o artifacts/docs

    - when:
        condition: <<parameters.run-lint>>
        steps:
          - run:
              name: CocoaPods spec lint
              command: |
                if [ "$CIRCLE_BRANCH" = 'master' ]; then
                  pod spec lint
                else
                  pod lib lint
                fi

    - store_test_results:
        path: test-results

    - store_artifacts:
        path: artifacts

workflows:
  version: 2

  build:
    jobs:
      - build:
          name: Xcode 13.1 - Swift 5.5
          xcode-version: '13.1.0'
          ios-sim: 'platform=iOS Simulator,name=iPhone 11,OS=15.0'
          build-doc: true
          run-lint: true
      - build:
          name: Xcode 12.5 - Swift 5.4
          xcode-version: '12.5.1'
          ios-sim: 'platform=iOS Simulator,name=iPhone 8,OS=14.5'
      - build:
          name: Xcode 12.0 - Swift 5.3
          xcode-version: '12.0.1'
          ios-sim: 'platform=iOS Simulator,name=iPhone 8,OS=14.0'
          ssh-fix: true
      - build:
          name: Xcode 11.7 - Swift 5.2
          xcode-version: '11.7.0'
          ios-sim: 'platform=iOS Simulator,name=iPhone 8,OS=12.4'
