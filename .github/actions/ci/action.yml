# This is a composite to allow sharing these steps into other workflows.
# For instance it could be used by regular CI as well as the release process.

name: CI Workflow
description: 'Shared CI workflow.'
inputs:
  xcode-version:
    description: 'Which version of xcode should be installed'
    required: true
  ios-sim:
    description: 'iOS Simulator to use for testing'
    required: true
  run-contract-tests:
    description: 'Should the contract tests be run?'
    required: true
  token:
    description: 'GH token used to download SDK test harness.'
    required: true

runs:
  using: composite
  steps:
    - uses: maxim-lobanov/setup-xcode@60606e260d2fc5762a71e64e74b2174e8ea3c8bd
      with:
        xcode-version: ${{ inputs.xcode-version }}

    - name: Install mint and swiftlint
      shell: bash
      run: |
        brew tap mint-lang/mint-lang
        brew install mint-lang swiftlint libressl

    - name: Install cocoapods
      shell: bash
      run: gem install cocoapods

    - name: Lint the podspec
      shell: bash
      run: pod lib lint LaunchDarkly.podspec --allow-warnings

    - name: Run swiftlint
      shell: bash
      run: |
        cd ./ContractTests
        swiftlint lint

    - name: Build for macOS
      shell: bash
      run: xcodebuild build -scheme 'LaunchDarkly_macOS' -sdk macosx -destination 'platform=macOS' | xcpretty

    - name: Build Tests for iOS device
      shell: bash
      run: xcodebuild build-for-testing -scheme 'LaunchDarkly_iOS' -sdk iphoneos CODE_SIGN_IDENTITY= | xcpretty

    - name: Build & Test on iOS Simulator
      shell: bash
      run: xcodebuild test -scheme 'LaunchDarkly_iOS' -sdk iphonesimulator -destination '${{ inputs.ios-sim }}' CODE_SIGN_IDENTITY= | xcpretty

    - name: Build for tvOS device
      shell: bash
      run: xcodebuild build -scheme 'LaunchDarkly_tvOS' -sdk appletvos CODE_SIGN_IDENTITY= | xcpretty

    - name: Build for tvOS Simulator
      shell: bash
      run: xcodebuild build -scheme 'LaunchDarkly_tvOS' -sdk appletvsimulator -destination 'platform=tvOS Simulator,name=Apple TV' | xcpretty

    - name: Build for watchOS simulator
      shell: bash
      run: xcodebuild build -scheme 'LaunchDarkly_watchOS' -sdk watchsimulator | xcpretty

    - name: Build for watchOS device
      shell: bash
      run: xcodebuild build -scheme 'LaunchDarkly_watchOS' -sdk watchos | xcpretty

    - name: Build & Test with swiftpm
      shell: bash
      run: swift test -v

    - name: Build contract tests
      if: ${{ inputs.run-contract-tests == 'true' }}
      shell: bash
      run: make build-contract-tests

    - name: Start contract tests in background
      if: ${{ inputs.run-contract-tests == 'true' }}
      shell: bash
      run: make start-contract-test-service-bg

    - uses: launchdarkly/gh-actions/actions/contract-tests@contract-tests-v1.0.1
      if: ${{ inputs.run-contract-tests == 'true' }}
      with:
        test_service_port: 8080
        token: ${{ inputs.token }}
        extra_params: "-status-timeout 120 -skip-from ./ContractTests/testharness-suppressions.txt"
